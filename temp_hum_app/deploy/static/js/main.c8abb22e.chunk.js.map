{"version":3,"sources":["config.js","App.js","serviceWorker.js","index.js"],"names":["DATA_SERVER","App","state","wantedTemperature","wantedHumidity","temperature","humidity","wantedGroundTemperature","wantedGroundHumidity","groundHumidity","doorState","waterState","changeDoor","changeWater","recommendedDoorState","recommendedWaterState","autoMode","changeWantedTemperature","changeWantedHumidity","changeWantedGroundHumidity","changeAutoMode","getData","changeInputs","axios","get","then","response","setState","data","tmp","hum","wntTmp","wntHum","gHum","wntGHum","parseInt","act","reccAct","aut","catch","error","console","log","mapAction","mapReccAction","mapAutoMode","style","color","sendData","qs","stringify","post","handleTempChange","event","target","value","handleHumChange","handleGroundHumChange","handleAutChange","checked","handleDoorChange","handleWaterChange","parseStyle","param","wantedParam","bottomDiff","topDiff","this","setInterval","className","src","htmlFor","onChange","type","min","max","step","id","placeholder","disabled","paddingBottom","onClick","data-toggle","Date","getFullYear","toString","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c8abb22e.chunk.js","sourcesContent":["const DATA_SERVER = \"https://temp-hum-esp8266.herokuapp.com\";\r\n\r\nexport {\r\n    DATA_SERVER\r\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport qs from 'qs';\nimport {DATA_SERVER} from './config.js';\nimport './App.css';\n\n\nvar tempDiffTop = 3;\nvar tempDiffBottom = -3;\nvar humDiffTop = 3;\nvar humDiffBottom = -3;\n\nclass App extends Component{\n  state={\n    wantedTemperature : \"25.00\",\n    wantedHumidity : \"50.00\",\n    temperature : \"25.00\",\n    humidity: \"50.00\",\n    wantedGroundTemperature : \"10.00\",\n    wantedGroundHumidity : \"15.00\",\n    groundHumidity: \"13.00\",\n    doorState : 2,\n    waterState : 1,\n    changeDoor : 2,\n    changeWater : 1,\n    recommendedDoorState : 2,\n    recommendedWaterState : 1,\n    autoMode : 0,\n    changeWantedTemperature : \"25.00\",\n    changeWantedHumidity : \"50.00\",\n    changeWantedGroundHumidity : \"15.00\",\n    changeAutoMode : 0\n  }\n\n  getData= (changeInputs)=>{\n    axios.get(DATA_SERVER+\"/get-data\")\n    .then(response=>{\n      this.setState({\n        temperature : response.data.tmp,\n        humidity : response.data.hum,\n        wantedTemperature : response.data.wntTmp,\n        wantedHumidity : response.data.wntHum,\n        groundHumidity: response.data.gHum,\n        wantedGroundHumidity : response.data.wntGHum,\n        doorState : parseInt(response.data.act/10),\n        waterState : response.data.act%10,\n        recommendedDoorState : parseInt(response.data.reccAct/10),\n        recommendedWaterState : response.data.reccAct%10,\n        autoMode : response.data.aut\n      });\n      if(changeInputs){\n        this.setState({\n          changeWantedHumidity : response.data.wntHum,\n          changeWantedTemperature : response.data.wntTmp,\n          changeWantedGroundHumidity : response.data.wntGHum,\n          changeAutoMode : response.data.aut,\n          changeWater : response.data.act%10,\n          changeDoor : parseInt(response.data.act/10),\n        });\n      }\n    })\n    .catch(error=>{\n      console.log(\"ERROR\", error)\n    })\n  }\n\n  componentDidMount(){\n    this.getData(true);\n    const interval = setInterval(() => {\n      this.getData(false);\n    }, 5000);\n    \n  }\n\n  mapAction = (recommendedDoorState, recommendedWaterState)=>{\n    if(recommendedDoorState==0&&recommendedWaterState==0) return \"All ok.\";\n    else{\n      let response = \"\";\n      if(recommendedWaterState==1) response+=\"Ground too humid. \";\n      else if(recommendedWaterState==2) response+=\"Ground too dry. \";\n      if(recommendedDoorState==1) response+=\"Air temperature and humidity too high.\";\n      else if(recommendedDoorState==2) response+=\"Air temperature and humidity too low.\";\n      return response;\n    }\n  }\n\n\n  mapReccAction = (recommendedDoorState, recommendedWaterState, doorState, waterState)=>{\n      \n    if(recommendedDoorState==0&&recommendedWaterState==0) return \"No action necessary.\";\n    else{\n      let response = \"\";\n\n      if(recommendedWaterState==1){\n        response+=\"Should close the valve. \";\n        if(waterState==1) response+=\"(Done) \";\n      } \n      else if(recommendedWaterState==2){\n        response+=\"Should open the valve. \";\n        if(waterState==2) response+=\"(Done) \";\n      } \n      if(recommendedDoorState==1){\n        response+=\"Should open the door.\";\n        if(doorState==1) response+=\"(Done) \";\n      } \n      else if(recommendedDoorState==2){\n          response+=\"Should close the door.\";\n          if(doorState==2) response+=\"(Done) \";\n      }\n      return response;\n    }\n  }\n\n  mapAutoMode = (autoMode) =>{\n    if(autoMode==0) return <div style={{color:\"#FB3D13\"}}>OFF</div>;\n    else if(autoMode==1) return <div style={{color:\"#4CFB13\"}}>ON</div>\n    else return <div style={{color:\"#FB3D13\"}}>UNDETERMINED</div>\n  }\n\n  sendData = () =>{\n    let wntTmp = this.state.changeWantedTemperature;\n    let wntHum = this.state.changeWantedHumidity;\n    let wntGHum = this.state.changeWantedGroundHumidity;\n    let aut = this.state.changeAutoMode;\n    let act = parseInt(this.state.changeDoor)*10+parseInt(this.state.changeWater);\n    let data = qs.stringify({\n      wntTmp:wntTmp,\n      wntHum:wntHum,\n      act:act,\n      aut:aut,\n      wntGHum : wntGHum\n    })\n    axios.post(DATA_SERVER+\"/settings\",data)\n    .catch(error=>{\n      console.log(\"POST ERROR\", error)\n    })\n  }\n\n  handleTempChange = (event) =>{\n    this.setState({changeWantedTemperature: event.target.value>100? 100 : event.target.value<0? 0 : event.target.value});\n  }\n\n  handleHumChange = (event) =>{\n    this.setState({changeWantedHumidity: event.target.value>100? 100 : event.target.value<0? 0 : event.target.value});\n  }\n\n  handleGroundHumChange = (event) =>{\n    this.setState({changeWantedGroundHumidity: event.target.value>100? 100 : event.target.value<0? 0 : event.target.value});\n  }\n\n  handleAutChange = (event) =>{\n    this.setState({changeAutoMode: event.target.checked?1:0});\n  }\n\n  handleDoorChange = (event) =>{\n    this.setState({changeDoor: event.target.value});\n  }\n\n  handleWaterChange = (event) =>{\n    this.setState({changeWater: event.target.value});\n  }\n\n  parseStyle = (param, wantedParam, bottomDiff, topDiff) =>{\n    param = parseInt(param);\n    wantedParam = parseInt(wantedParam);\n    bottomDiff = parseInt(bottomDiff);\n    topDiff = parseInt(topDiff);\n    if(param-wantedParam<bottomDiff) return {color:\"#339EFF\"};\n    else if(param-wantedParam>topDiff) return {color:\"#FB3D13\"};\n    else return {color:\"#4CFB13\"};\n  }\n\n  render(){\n    return (\n      <div className=\"main_wrapper\">\n        <header>\n          Loshmey's temperature and humidity project\n        </header>\n        <div className=\"main_body\">\n          <div className = \"data_wrapper\">\n            <div className=\"data_container\">\n              <div className=\"img_container\">\n                <img src=\"temperature_icon.png\" className=\"img-fluid\"></img>\n              </div>\n              <div className=\"data_text_container\">\n                AIR TEMPERATURE:<br></br><div className=\"data_text\" style={this.parseStyle(this.state.temperature, this.state.wantedTemperature, tempDiffBottom, tempDiffTop )}>{this.state.temperature}{this.state.temperature==\"no_data\"? null : '\\u2103'}</div>\n              </div>\n            </div>\n            <div className=\"data_container\">\n              <div className=\"img_container\">\n                <img src=\"humidity_icon.png\" className=\"img-fluid\"></img>\n              </div>\n              <div className=\"data_text_container\">\n                AIR HUMIDITY:<br></br><div className=\"data_text\" style={this.parseStyle(this.state.humidity, this.state.wantedHumidity, humDiffBottom, humDiffTop )}>{this.state.humidity}{this.state.humidity==\"no_data\"? null : `%`}</div>\n              </div>\n            </div>\n            <div className=\"data_container\">\n              <div className=\"img_container\">\n                <img src=\"soil_icon.jpg\" className=\"img-fluid\"></img>\n              </div>\n              <div className=\"data_text_container\">\n                GROUND HUMIDITY:<br></br><div className=\"data_text\" style={this.parseStyle(this.state.groundHumidity, this.state.wantedGroundHumidity, humDiffBottom, humDiffTop )}>{this.state.groundHumidity}{this.state.groundHumidity==\"no_data\"? null : `%`}</div>\n              </div>\n            </div>\n            <div className=\"data_container\">\n              <div className=\"img_container\">\n                <img src=\"state_icon.png\" className=\"img-fluid\"></img>\n              </div>\n              <div className=\"data_text_container\">\n                STATE:<br></br><div className=\"data_text\">{this.mapAction(this.state.recommendedDoorState, this.state.recommendedWaterState)}</div>\n              </div>\n            </div>\n            <div className=\"data_container\">\n              <div className=\"img_container\">\n                <img src=\"brain_icon.png\" className=\"img-fluid\"></img>\n              </div>\n              <div className=\"data_text_container\">\n                RECOMMENDED STATE:<br></br><div className=\"data_text\">{this.mapReccAction(this.state.recommendedDoorState, this.state.recommendedWaterState, this.state.doorState, this.state.waterState)}</div>\n              </div>\n            </div>\n          </div>\n          <div className = \"data_wrapper\">\n            <div className=\"data_container\">\n              <div className=\"img_container\">\n                  <img src=\"temperature_gauge_icon.png\" className=\"img-fluid\"></img>\n              </div>\n              <div className=\"data_text_container\">\n                WANTED AIR TEMPERATURE:<br></br><div className=\"data_text\">{this.state.wantedTemperature}&#8451;</div>\n              </div>\n            </div>\n            <div className=\"data_container\">\n              <div className=\"img_container\">\n                <img src=\"humidity_gauge_icon.png\" className=\"img-fluid\"></img>\n              </div>\n              <div className=\"data_text_container\">\n                WANTED AIR HUMIDITY:<br></br><div className=\"data_text\">{this.state.wantedHumidity}%</div>\n              </div>\n            </div>\n            <div className=\"data_container\">\n              <div className=\"img_container\">\n                <img src=\"soil_humidity_gauge_icon.png\" className=\"img-fluid\"></img>\n              </div>\n              <div className=\"data_text_container\">\n                WANTED GROUND HUMIDITY:<br></br><div className=\"data_text\">{this.state.wantedGroundHumidity}%</div>\n              </div>\n            </div>\n            <div className=\"data_container\">\n              <div className=\"img_container\">\n                <img src=\"robot_icon.png\" className=\"img-fluid\"></img>\n              </div>\n              <div className=\"data_text_container\">\n                AUTOMATIC MODE:<br></br>{this.mapAutoMode(this.state.autoMode)}\n              </div>\n            </div>\n          </div>\n          <form className=\"form_wrapper\">\n            <div className=\"form-group\">\n              <label htmlFor=\"inputTemperature\">Change wanted air temperature (&#8451;)</label>\n              <input onChange={this.handleTempChange} type=\"number\" min=\"0\" max=\"100\" step=\"1\" className=\"form-control\" id=\"inputTemperature\" placeholder=\"Enter air temperature\" value={this.state.changeWantedTemperature}></input>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"inputHumidity\">Change wanted air humidity (%)</label>\n              <input onChange={this.handleHumChange} type=\"number\" min=\"0\" max=\"100\" step=\"1\" className=\"form-control\" id=\"inputHumidity\" placeholder=\"Enter air humidity\" value={this.state.changeWantedHumidity}></input>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"inputGroundHumidity\">Change wanted ground humidity (%)</label>\n              <input onChange={this.handleGroundHumChange} type=\"number\" min=\"0\" max=\"100\" step=\"1\" className=\"form-control\" id=\"inputGroundHumidity\" placeholder=\"Enter ground humidity\" value={this.state.changeWantedGroundHumidity}></input>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"selectDoor\">Door control</label>\n              <select onChange={this.handleDoorChange} disabled={this.state.changeAutoMode==1} value={this.state.changeDoor} className=\"form-control\" id=\"selectDoor\">\n                <option value=\"1\">Open door</option>\n                <option value=\"2\">Close door</option>\n              </select>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"selectWater\">Water control</label>\n              <select onChange={this.handleWaterChange} disabled={this.state.changeAutoMode==1} value={this.state.changeWater} className=\"form-control\" id=\"selectWater\">\n                <option value=\"2\">Open valve</option>\n                <option value=\"1\">Close valve</option>\n              </select>\n            </div>\n\n            <div style={{paddingBottom:\"5%\"}} className=\"custom-control custom-switch\">\n              <input onClick={this.handleAutChange} data-toggle=\"toggle\" className=\"custom-control-input\"  checked={this.state.changeAutoMode==1} type=\"checkbox\" id=\"autoModeCheck\" value={this.state.changeAutoMode}></input> \n              <label className=\"custom-control-label\" htmlFor=\"autoModeCheck\">Automatic mode</label>\n            </div>\n            <button onClick={this.sendData} type=\"button\" className=\"btn btn-primary\">Submit</button>\n          </form>\n        </div>\n        <footer>\n          Developed by YouFaceJaraxxus &copy; {new Date().getFullYear().toString()}\n        </footer>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}